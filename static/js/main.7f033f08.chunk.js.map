{"version":3,"sources":["components/Menu.js","utils/enums.js","utils/index.js","utils/basicStrategy.js","img/felt.png","app/index.js","reportWebVitals.js","theme/index.js","index.js"],"names":["Menu","hands","setHands","useState","open","setOpen","IconButton","color","component","onClick","style","backgroundColor","position","top","left","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","justifyContent","ToggleButtonGroup","value","exclusive","onChange","event","newHand","size","ToggleButton","Stack","spacing","disabled","FormControlLabel","control","Switch","checked","label","Object","freeze","HIT","STAND","DOUBLE","SPLIT","generateHand","deck","cardOne","Math","floor","random","cardTwo","card","getCardValue","generateRandomDraw","convertFaceToTen","hand","suit","basicStrategyValues","options","basicStrategyPairs","basicStrategyAces","App","feedback","setFeedback","answer","setAnswer","blackjack","setBlackjack","gameOver","setGameOver","playerHand","setPlayerHand","dealerHand","setDealerHand","useEffect","includes","calculateBasicStat","dealer","guess","strat","handValue","toUpperCase","width","height","backgroundImage","backgroundImg","Grid","container","direction","alignItems","minHeight","minWidth","padding","item","xs","lg","marginTop","window","screen","availHeight","back","marginLeft","Button","variant","visibility","Paper","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","mode","primary","main","secondary","ReactDOM","render","StrictMode","ThemeProvider","theme","CssBaseline","document","getElementById"],"mappings":"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RkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,QAEV,CACEgB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,OAEV,CACEiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,OAEV,CACEiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,OAEV,CACEiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,QAgBCkB,EAAqB,CAChC,CACED,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQf,MACRe,EAAQf,MACRe,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,OAEV,CACEe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQjB,MACRiB,EAAQf,MACRe,EAAQf,MACRe,EAAQjB,MACRiB,EAAQjB,OAEV,CACEiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,OAEV,CACEiB,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,MACRe,EAAQf,QAcCiB,EAAoB,CAC/B,CACEF,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQlB,IACRkB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQjB,MACRiB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQhB,OACRgB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQlB,IACRkB,EAAQlB,IACRkB,EAAQlB,KAEV,CACEkB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQhB,OACRgB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,OAEV,CACEiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,MACRiB,EAAQjB,QC/eG,MAA0B,iCC6C1B,SAASoB,IACtB,MAA0B1D,mBAAS,QAAnC,mBAAOF,EAAP,KAAcC,EAAd,KACA,EAAgCC,mBAAS,MAAzC,mBAAO2D,EAAP,KAAiBC,EAAjB,KACA,EAA4B5D,mBAAS,MAArC,mBAAO6D,EAAP,KAAeC,EAAf,KACA,EAAkC9D,oBAAS,GAA3C,mBAAO+D,EAAP,KAAkBC,EAAlB,KACA,EAAgChE,oBAAS,GAAzC,mBAAOiE,EAAP,KAAiBC,EAAjB,KACA,EAAoClE,mBAASyC,EAAa3C,IAA1D,mBAAOqE,EAAP,KAAmBC,EAAnB,KACA,EAAoCpE,mBAASkD,KAA7C,mBAAOmB,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACyB,KAA7BJ,EAAWxB,QAAQvB,MACjB,CAAC,GAAI,IAAK,IAAK,KAAKoD,SAASL,EAAWpB,QAAQ3B,SAClD8C,GAAY,GACZF,GAAa,IAEuB,KAA7BG,EAAWpB,QAAQ3B,OACxB,CAAC,GAAI,IAAK,IAAK,KAAKoD,SAASL,EAAWxB,QAAQvB,SAClD8C,GAAY,GACZF,GAAa,MAGhB,CAACG,EAAYH,EAAcE,IAE9B,IAkBMO,EAAqB,SAACrB,EAAMsB,EAAQC,GAGxC,IAAIC,EACJ,GAHAd,EAAUa,GACVT,GAAY,GAERd,EAAKT,QAAQvB,QAAUgC,EAAKL,QAAQ3B,MACtCgC,EAAOD,EAAiBC,GACI,kBAAjBsB,EAAOtD,QAAoBsD,EAAOtD,MAAQ,IACrDwD,EAAQpB,EAAmBJ,EAAKT,QAAQvB,MAAQ,GAAGsD,EAAOtD,MAAQ,QAC7D,GAA2B,KAAvBgC,EAAKT,QAAQvB,OAAuC,KAAvBgC,EAAKL,QAAQ3B,MACnDgC,EAAOD,EAAiBC,GACI,kBAAjBsB,EAAOtD,QAAoBsD,EAAOtD,MAAQ,IACrDwD,EACEnB,EACyB,KAAvBL,EAAKL,QAAQ3B,MACTgC,EAAKT,QAAQvB,MAAQ,EACrBgC,EAAKL,QAAQ3B,MAAQ,GACzBsD,EAAOtD,MAAQ,OACd,CACLgC,EAAOD,EAAiBC,GACI,kBAAjBsB,EAAOtD,QAAoBsD,EAAOtD,MAAQ,IACrD,IAAMyD,EAAYzB,EAAKT,QAAQvB,MAAQgC,EAAKL,QAAQ3B,MACpDwD,EAAQtB,EAAoBuB,EAAY,GAAGH,EAAOtD,MAAQ,GAG1DwC,EADEgB,IAAUD,EACA,YAEA,oBAAD,OAAqBC,EAAME,iBAI1C,OACE,sBACEvE,MAAO,CACLE,SAAU,QACVsE,MAAO,OACPC,OAAQ,OACRrE,KAAM,EACND,IAAK,EACLF,gBAAiB,UACjByE,gBAAgB,OAAD,OAASC,EAAT,MARnB,UAWE,cAAC,EAAD,CAAMpF,MAAOA,EAAOC,SAnDC,SAACyB,GACxB0C,GAAY,GACZN,EAAY,MACZI,GAAa,GACbjE,EAASyB,GACT4C,EAAc3B,EAAajB,IAC3B8C,EAAcpB,QA8CZ,eAACiC,EAAA,EAAD,CACEC,WAAS,EACTxD,QAAS,EACTyD,UAAU,SACVC,WAAW,SACXpE,eAAe,SACfX,MAAO,CACLgF,UAAW,OACXC,SAAU,OACVC,QAAS,eATb,UAYE,cAACN,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACjE,EAAA,EAAD,CAAOC,QAAS,EAAGyD,UAAU,MAA7B,UACE,qBACE9E,MAAO,CACLsF,UAAU,IAAD,OACqB,GAA5BC,OAAOC,OAAOC,aAAqB,EAAI,GAAK,GADrC,OAFb,SAOE,cAAC,IAAD,CACEhB,OAAQpC,KAAKC,MAAkC,IAA5BiD,OAAOC,OAAOC,YAAoB,KACrDC,MAAI,MAGR,qBACE1F,MAAO,CACL2F,WAAW,SAAD,OACoB,GAA5BJ,OAAOC,OAAOC,aAAqB,EAAI,GAD/B,gBAE0B,GAA5BF,OAAOC,OAAOC,aAAqB,EAAI,GAAK,GAF1C,OAFd,SAOE,cAAC,IAAD,CACEhD,KAAMqB,EAAWrB,KACjBgC,OAAQpC,KAAKC,MAAkC,IAA5BiD,OAAOC,OAAOC,YAAoB,cAK7D,cAACb,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACjE,EAAA,EAAD,CAAOC,QAAS,EAAGyD,UAAU,MAA7B,UACE,cAAC,IAAD,CACErC,KAAMmB,EAAWxB,QAAQK,KACzBgC,OAAQpC,KAAKC,MAAkC,GAA5BiD,OAAOC,OAAOC,YAAmB,OAEtD,cAAC,IAAD,CACEhD,KAAMmB,EAAWpB,QAAQC,KACzBgC,OAAQpC,KAAKC,MAAkC,GAA5BiD,OAAOC,OAAOC,YAAmB,YAI1D,cAACb,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACjE,EAAA,EAAD,CAAOC,QAAS,EAAGyD,UAAU,MAA7B,UACE,cAACc,EAAA,EAAD,CACEC,QAASvC,IAAWN,EAAQlB,IAAM,WAAa,YAC/C/B,QAAS,kBACPmE,EAAmBN,EAAYE,EAAYd,EAAQlB,MAErDR,SAAUoC,EALZ,iBASA,cAACkC,EAAA,EAAD,CACEC,QAASvC,IAAWN,EAAQjB,MAAQ,WAAa,YACjDhC,QAAS,kBACPmE,EAAmBN,EAAYE,EAAYd,EAAQjB,QAErDT,SAAUoC,EALZ,mBASA,cAACkC,EAAA,EAAD,CACEC,QAASvC,IAAWN,EAAQhB,OAAS,WAAa,YAClDjC,QAAS,kBACPmE,EAAmBN,EAAYE,EAAYd,EAAQhB,SAErDV,SAAUoC,EALZ,oBASA,cAACkC,EAAA,EAAD,CACEC,QAASvC,IAAWN,EAAQf,MAAQ,WAAa,YACjDlC,QAAS,kBACPmE,EAAmBN,EAAYE,EAAYd,EAAQf,QAErDX,SACEsC,EAAWxB,QAAQvB,QAAU+C,EAAWpB,QAAQ3B,OAChD6C,EAPJ,wBAcJ,cAACkB,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACjE,EAAA,EAAD,CACEC,QAAS,EACTyD,UAAU,MACV9E,MAAO,CAAE8F,WAAYpC,EAAW,UAAY,UAH9C,UAKGF,EACC,cAACuC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOC,SAAS,OAAOJ,QAAQ,WAA/B,yBAIa,cAAbzC,EACF,cAAC2C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOC,SAAS,UAAUJ,QAAQ,WAAlC,SACGzC,MAIL,cAAC2C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOC,SAAS,UAAUJ,QAAQ,WAAlC,SACGzC,MAIP,cAACwC,EAAA,EAAD,CAAQC,QAAQ,OAAOhG,MAAM,YAAYE,QArLnC,WACd4D,GAAY,GACZJ,EAAU,MACVF,EAAY,MACZI,GAAa,GACbI,EAAc3B,EAAa3C,IAC3BwE,EAAcpB,MA+KN,SACE,6DC1Pd,IAYeuD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCLCQ,cAAY,CACzBC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cCGZE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAeC,MAAOA,EAAtB,UACE,cAACC,EAAA,EAAD,IACA,cAACnE,EAAD,SAGJoE,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.7f033f08.chunk.js","sourcesContent":["import { useState } from 'react'\n\nimport Stack from '@mui/material/Stack'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\n\nexport default function Menu({ hands, setHands }) {\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleHands = (event, newHand) => {\n    setHands(newHand)\n  }\n\n  return (\n    <>\n      <IconButton\n        color=\"primary\"\n        aria-label=\"menu\"\n        component=\"span\"\n        onClick={() => setOpen(true)}\n        style={{\n          backgroundColor: open ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.1)',\n          position: 'absolute',\n          top: '1rem',\n          left: '1rem',\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Dialog onClose={handleClose} open={open}>\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Hand Types:</DialogContentText>\n          <DialogActions style={{ justifyContent: 'center' }}>\n            <ToggleButtonGroup\n              value={hands}\n              exclusive\n              onChange={handleHands}\n              aria-label=\"hand types\"\n              color=\"info\"\n              size=\"medium\"\n            >\n              <ToggleButton value=\"rand\" aria-label=\"random hands\">\n                Random\n              </ToggleButton>\n              <ToggleButton value=\"ace\" aria-label=\"ace hands\">\n                Ace Hands\n              </ToggleButton>\n              <ToggleButton value=\"pair\" aria-label=\"pair hands\">\n                Pairs\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </DialogActions>\n          <DialogContentText>Rules:</DialogContentText>\n          <DialogActions>\n            <Stack spacing={2}>\n              <ToggleButtonGroup\n                value={'4'}\n                exclusive\n                onChange={() => {}}\n                aria-label=\"number of decks\"\n                color=\"info\"\n                size=\"small\"\n                disabled\n              >\n                <ToggleButton value=\"1\" aria-label=\"one deck\">\n                  One Deck\n                </ToggleButton>\n                <ToggleButton value=\"2\" aria-label=\"two decks\">\n                  2 Decks\n                </ToggleButton>\n                <ToggleButton value=\"4\" aria-label=\"four, six or eight decks\">\n                  4/6/8 Decks\n                </ToggleButton>\n              </ToggleButtonGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    disabled\n                    checked={true}\n                    color=\"info\"\n                    onChange={() => {}}\n                  />\n                }\n                label=\"Dealer Hit Soft 17\"\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    disabled\n                    checked={true}\n                    color=\"info\"\n                    onChange={() => {}}\n                  />\n                }\n                label=\"Double After Split\"\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    disabled\n                    checked={true}\n                    color=\"info\"\n                    onChange={() => {}}\n                  />\n                }\n                label=\"Re-Split Aces\"\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    disabled\n                    checked={false}\n                    color=\"info\"\n                    onChange={() => {}}\n                  />\n                }\n                label=\"Surrender\"\n              />\n            </Stack>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    </>\n  )\n}\n","export default Object.freeze({\n  HIT: 'Hit',\n  STAND: 'Stand',\n  DOUBLE: 'Double',\n  SPLIT: 'Split',\n})\n","export const generateHand = (hands) => {\n  const deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 11]\n  const cardOne = hands === 'ace' ? 11 : deck[Math.floor(Math.random() * 13)]\n  const cardTwo =\n    hands === 'pair' ? cardOne : deck[Math.floor(Math.random() * 13)]\n  return {\n    cardOne: {\n      value: cardOne,\n      card: getCardValue(cardOne),\n    },\n    cardTwo: {\n      value: cardTwo,\n      card: getCardValue(cardTwo),\n    },\n  }\n}\n\nexport const generateRandomDraw = () => {\n  const deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 11]\n  const card = deck[Math.floor(Math.random() * 13)]\n  return {\n    value: card,\n    card: getCardValue(card),\n  }\n}\n\nexport const convertFaceToTen = (hand) => {\n  if (typeof hand.cardOne.value === 'string') hand.cardOne.value = 10\n  if (typeof hand.cardTwo.value === 'string') hand.cardTwo.value = 10\n  return hand\n}\n\nconst getRandomSuit = () => {\n  const suits = ['c', 'd', 'h', 's']\n  return suits[Math.floor(Math.random() * 4)]\n}\n\nexport const getCardValue = (value) => {\n  const suit = getRandomSuit()\n  if (value === 10) return `T${suit}`\n  if (value === 11) return `A${suit}`\n  return value + suit\n}\n","import options from './enums'\n\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n  10\n  11\n  12\n  13\n  14\n  15\n  16\n  17\n  18\n  19\n  20\n*/\nexport const basicStrategyValues = [\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n  ],\n]\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n  10\n  11\n*/\nexport const basicStrategyPairs = [\n  [\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n  ],\n  [\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.STAND,\n    options.SPLIT,\n    options.SPLIT,\n    options.STAND,\n    options.STAND,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n  ],\n  [\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n    options.SPLIT,\n  ],\n]\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n*/\nexport const basicStrategyAces = [\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.HIT,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.HIT,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.STAND,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.DOUBLE,\n    options.STAND,\n    options.STAND,\n    options.HIT,\n    options.HIT,\n    options.HIT,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.DOUBLE,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n  ],\n  [\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n    options.STAND,\n  ],\n]\n","export default __webpack_public_path__ + \"static/media/felt.5b148bae.png\";","import { useState, useEffect } from 'react'\n\nimport Grid from '@mui/material/Grid'\nimport Paper from '@mui/material/Paper'\nimport Stack from '@mui/material/Stack'\nimport Button from '@mui/material/Button'\nimport Alert from '@mui/material/Alert'\n\nimport Card from '@heruka_urgyen/react-playing-cards'\n/*\n  <Card card={card} deckType={deckType} height=\"XXpx\" back />\n\n  where\n  // card rank and suit, e.g 2c, Kh, Ad, etc\n    card :: String\n    card = rank + suit\n      where\n        rank = (2 | 3 ... 9 | T | J | Q | K | A)\n        suit = (c | d | h | s)\n\n  // various card styles\n    deckType :: String\n    deckType = (basic | four-color | big-face | big-face four-color)\n\n  // card height in px\n    height :: String\n\n  // show front (true by default, can be omitted)\n    front :: Boolean\n\n  // show back\n    back :: Boolean\n*/\n\nimport Menu from 'components/Menu'\nimport options from 'utils/enums'\nimport { generateHand, generateRandomDraw, convertFaceToTen } from 'utils'\nimport {\n  basicStrategyValues,\n  basicStrategyPairs,\n  basicStrategyAces,\n} from 'utils/basicStrategy'\n\nimport backgroundImg from 'img/felt.png'\n\nexport default function App() {\n  const [hands, setHands] = useState('rand')\n  const [feedback, setFeedback] = useState(null)\n  const [answer, setAnswer] = useState(null)\n  const [blackjack, setBlackjack] = useState(false)\n  const [gameOver, setGameOver] = useState(false)\n  const [playerHand, setPlayerHand] = useState(generateHand(hands))\n  const [dealerHand, setDealerHand] = useState(generateRandomDraw())\n\n  useEffect(() => {\n    if (playerHand.cardOne.value === 11) {\n      if ([10, 'J', 'Q', 'K'].includes(playerHand.cardTwo.value)) {\n        setGameOver(true)\n        setBlackjack(true)\n      }\n    } else if (playerHand.cardTwo.value === 11) {\n      if ([10, 'J', 'Q', 'K'].includes(playerHand.cardOne.value)) {\n        setGameOver(true)\n        setBlackjack(true)\n      }\n    }\n  }, [playerHand, setBlackjack, setGameOver])\n\n  const newGame = () => {\n    setGameOver(false)\n    setAnswer(null)\n    setFeedback(null)\n    setBlackjack(false)\n    setPlayerHand(generateHand(hands))\n    setDealerHand(generateRandomDraw())\n  }\n\n  const handleHandChange = (newHand) => {\n    setGameOver(false)\n    setFeedback(null)\n    setBlackjack(false)\n    setHands(newHand)\n    setPlayerHand(generateHand(newHand))\n    setDealerHand(generateRandomDraw())\n  }\n\n  const calculateBasicStat = (hand, dealer, guess) => {\n    setAnswer(guess)\n    setGameOver(true)\n    let strat\n    if (hand.cardOne.value === hand.cardTwo.value) {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string') dealer.value = 10\n      strat = basicStrategyPairs[hand.cardOne.value - 2][dealer.value - 2]\n    } else if (hand.cardOne.value === 11 || hand.cardTwo.value === 11) {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string') dealer.value = 10\n      strat =\n        basicStrategyAces[\n          hand.cardTwo.value === 11\n            ? hand.cardOne.value - 2\n            : hand.cardTwo.value - 2\n        ][dealer.value - 2]\n    } else {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string') dealer.value = 10\n      const handValue = hand.cardOne.value + hand.cardTwo.value\n      strat = basicStrategyValues[handValue - 2][dealer.value - 2]\n    }\n    if (strat === guess) {\n      setFeedback('Nice Play')\n    } else {\n      setFeedback(`The book says to ${strat.toUpperCase()}`)\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        left: 0,\n        top: 0,\n        backgroundColor: '#006636',\n        backgroundImage: `url(${backgroundImg})`,\n      }}\n    >\n      <Menu hands={hands} setHands={handleHandChange} />\n      <Grid\n        container\n        spacing={2}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{\n          minHeight: '100%',\n          minWidth: '100%',\n          padding: '2rem 0 2rem',\n        }}\n      >\n        <Grid item xs={12} lg={8}>\n          <Stack spacing={2} direction=\"row\">\n            <div\n              style={{\n                marginTop: `-${\n                  window.screen.availHeight * 0.3 * (5 / 7) * 0.1\n                }px`,\n              }}\n            >\n              <Card\n                height={Math.floor(window.screen.availHeight * 0.25, 550)}\n                back\n              />\n            </div>\n            <div\n              style={{\n                marginLeft: `calc(-${\n                  window.screen.availHeight * 0.3 * (5 / 7)\n                }px + ${window.screen.availHeight * 0.3 * (5 / 7) * 0.3}px`,\n              }}\n            >\n              <Card\n                card={dealerHand.card}\n                height={Math.floor(window.screen.availHeight * 0.25, 550)}\n              />\n            </div>\n          </Stack>\n        </Grid>\n        <Grid item xs={12} lg={8}>\n          <Stack spacing={2} direction=\"row\">\n            <Card\n              card={playerHand.cardOne.card}\n              height={Math.floor(window.screen.availHeight * 0.3, 600)}\n            />\n            <Card\n              card={playerHand.cardTwo.card}\n              height={Math.floor(window.screen.availHeight * 0.3, 600)}\n            />\n          </Stack>\n        </Grid>\n        <Grid item xs={12} lg={8}>\n          <Stack spacing={2} direction=\"row\">\n            <Button\n              variant={answer === options.HIT ? 'outlined' : 'contained'}\n              onClick={() =>\n                calculateBasicStat(playerHand, dealerHand, options.HIT)\n              }\n              disabled={gameOver}\n            >\n              Hit\n            </Button>\n            <Button\n              variant={answer === options.STAND ? 'outlined' : 'contained'}\n              onClick={() =>\n                calculateBasicStat(playerHand, dealerHand, options.STAND)\n              }\n              disabled={gameOver}\n            >\n              Stand\n            </Button>\n            <Button\n              variant={answer === options.DOUBLE ? 'outlined' : 'contained'}\n              onClick={() =>\n                calculateBasicStat(playerHand, dealerHand, options.DOUBLE)\n              }\n              disabled={gameOver}\n            >\n              Double\n            </Button>\n            <Button\n              variant={answer === options.SPLIT ? 'outlined' : 'contained'}\n              onClick={() =>\n                calculateBasicStat(playerHand, dealerHand, options.SPLIT)\n              }\n              disabled={\n                playerHand.cardOne.value !== playerHand.cardTwo.value ||\n                gameOver\n              }\n            >\n              Split\n            </Button>\n          </Stack>\n        </Grid>\n        <Grid item xs={12} lg={8}>\n          <Stack\n            spacing={2}\n            direction=\"row\"\n            style={{ visibility: gameOver ? 'visible' : 'hidden' }}\n          >\n            {blackjack ? (\n              <Paper>\n                <Alert severity=\"info\" variant=\"outlined\">\n                  Blackjack\n                </Alert>\n              </Paper>\n            ) : feedback === 'Nice Play' ? (\n              <Paper>\n                <Alert severity=\"success\" variant=\"outlined\">\n                  {feedback}\n                </Alert>\n              </Paper>\n            ) : (\n              <Paper>\n                <Alert severity=\"warning\" variant=\"outlined\">\n                  {feedback}\n                </Alert>\n              </Paper>\n            )}\n            <Button variant=\"text\" color=\"secondary\" onClick={newGame}>\n              <strong>Play Again</strong>\n            </Button>\n          </Stack>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import createTheme from '@mui/material/styles/createTheme'\n\nexport default createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#cccccc',\n    },\n    secondary: {\n      main: '#000000',\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'index.css'\nimport App from 'app'\nimport reportWebVitals from 'reportWebVitals'\n\nimport CssBaseline from '@mui/material/CssBaseline'\n\nimport { ThemeProvider } from '@mui/material/styles'\n\nimport theme from 'theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}