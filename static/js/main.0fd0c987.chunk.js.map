{"version":3,"sources":["components/Menu.js","utils/enums.js","utils/index.js","utils/basicStrategy.js","img/felt.png","app/index.js","reportWebVitals.js","theme/index.js","index.js"],"names":["Menu","hands","setHands","useState","open","setOpen","IconButton","color","component","onClick","style","backgroundColor","position","top","left","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","justifyContent","ToggleButtonGroup","value","exclusive","onChange","event","newHand","size","ToggleButton","Stack","spacing","disabled","FormControlLabel","control","Switch","checked","label","Object","freeze","HIT","STAND","DOUBLE","SPLIT","generateHand","deck","cardOne","Math","floor","random","cardTwo","card","getCardValue","generateRandomDraw","convertFaceToTen","hand","suit","basicStrategyValues","options","basicStrategyPairs","basicStrategyAces","App","feedback","setFeedback","blackjack","setBlackjack","gameOver","setGameOver","playerHand","setPlayerHand","dealerHand","setDealerHand","useEffect","includes","calculateBasicStat","dealer","guess","strat","handValue","toUpperCase","width","height","backgroundImage","backgroundImg","Grid","container","direction","alignItems","minHeight","minWidth","padding","item","xs","lg","marginTop","window","screen","availHeight","back","marginLeft","Button","variant","visibility","Paper","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","mode","primary","main","secondary","ReactDOM","render","StrictMode","ThemeProvider","theme","CssBaseline","document","getElementById"],"mappings":"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B,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,KAC3K,CAAIkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,KAC3K,CAAIkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,KAC3K,CAAIkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,KAC3K,CAAIkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,KAC3K,CAAIkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,KAC3K,CAAIkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAQkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,KAC3K,CAAIkB,EAAQlB,IAAQkB,EAAQhB,OAAQgB,EAAQhB,OAAQgB,EAAQhB,OAAQgB,EAAQhB,OAAWgB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,IAAWkB,EAAQlB,KAC3K,CAAIkB,EAAQhB,OAAQgB,EAAQhB,OAAQgB,EAAQhB,OA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","file":"static/js/main.0fd0c987.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nimport Stack from '@mui/material/Stack';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\n\nexport default function Menu({ hands, setHands }) {\n\n    const [open, setOpen] = useState(false)\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleHands = (event, newHand) => {\n        setHands(newHand)\n    }\n\n    return (\n        <>\n            <IconButton\n                color=\"primary\"\n                aria-label=\"menu\"\n                component=\"span\"\n                onClick={() => setOpen(true)}\n                style={{\n                    backgroundColor: open ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.1)',\n                    position: 'absolute',\n                    top: '1rem',\n                    left: '1rem'\n                }}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Dialog onClose={handleClose} open={open}>\n                <DialogTitle>Settings</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Hand Types:\n                    </DialogContentText>\n                    <DialogActions style={{ justifyContent: 'center' }}>\n                        <ToggleButtonGroup\n                            value={hands}\n                            exclusive\n                            onChange={handleHands}\n                            aria-label=\"hand types\"\n                            color=\"info\"\n                            size=\"medium\"\n                        >\n                            <ToggleButton value=\"rand\" aria-label=\"random hands\">\n                                Random\n                            </ToggleButton>\n                            <ToggleButton value=\"ace\" aria-label=\"ace hands\">\n                                Ace Hands\n                            </ToggleButton>\n                            <ToggleButton value=\"pair\" aria-label=\"pair hands\">\n                                Pairs\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </DialogActions>\n                    <DialogContentText>\n                        Rules:\n                    </DialogContentText>\n                    <DialogActions>\n                        <Stack spacing={2}>\n                            <ToggleButtonGroup\n                                value={\"4\"}\n                                exclusive\n                                onChange={() => { }}\n                                aria-label=\"number of decks\"\n                                color=\"info\"\n                                size=\"small\"\n                                disabled\n                            >\n                                <ToggleButton value=\"1\" aria-label=\"one deck\">\n                                    One Deck\n                                </ToggleButton>\n                                <ToggleButton value=\"2\" aria-label=\"two decks\">\n                                    2 Decks\n                                </ToggleButton>\n                                <ToggleButton value=\"4\" aria-label=\"four, six or eight decks\">\n                                    4/6/8 Decks\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                            <FormControlLabel control={<Switch disabled checked={true} color=\"info\" onChange={() => { }} />} label=\"Dealer Hit Soft 17\" />\n                            <FormControlLabel control={<Switch disabled checked={true} color=\"info\" onChange={() => { }} />} label=\"Double After Split\" />\n                            <FormControlLabel control={<Switch disabled checked={true} color=\"info\" onChange={() => { }} />} label=\"Re-Split Aces\" />\n                            <FormControlLabel control={<Switch disabled checked={false} color=\"info\" onChange={() => { }} />} label=\"Surrender\" />\n                        </Stack>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n        </>\n    )\n}","export default Object.freeze({\n    HIT: 'Hit', \n    STAND: 'Stand', \n    DOUBLE: 'Double',\n    SPLIT: 'Split'\n})","export const generateHand = (hands) => {\n    const deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 11]\n    const cardOne = hands==='ace' ? 11 : deck[Math.floor(Math.random() * (13))]\n    const cardTwo = hands==='pair' ? cardOne : deck[Math.floor(Math.random() * (13))]\n    return {\n        cardOne: {\n        value: cardOne,\n        card: getCardValue(cardOne)\n        },\n        cardTwo: {\n        value: cardTwo,\n        card: getCardValue(cardTwo)\n        }\n    }\n}   \n\nexport const generateRandomDraw = () => {\n    const deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 11]\n    const card = deck[Math.floor(Math.random() * (13))]\n    return {\n        value: card,\n        card: getCardValue(card)\n    }\n}\n\nexport const convertFaceToTen = (hand) => {\n    if (typeof hand.cardOne.value === 'string')\n        hand.cardOne.value = 10\n    if (typeof hand.cardTwo.value === 'string')\n        hand.cardTwo.value = 10\n    return hand\n}\n\nconst getRandomSuit = () => {\n    const suits = ['c', 'd', 'h', 's']\n    return suits[Math.floor(Math.random() * (4))]\n}\n\nexport const getCardValue = (value) => {\n    const suit = getRandomSuit()\n    if (value === 10)\n        return `T${suit}`\n    if (value === 11)\n        return `A${suit}`\n    return value + suit\n}","import options from './enums'\n\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n  10\n  11\n  12\n  13\n  14\n  15\n  16\n  17\n  18\n  19\n  20\n*/\nexport const basicStrategyValues = [ \n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.HIT,       options.HIT    ],\n    [   options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE ],\n    [   options.HIT,    options.HIT,    options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n];\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n  10\n  11\n*/\nexport const basicStrategyPairs = [ \n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.SPLIT,  options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.HIT,       options.HIT    ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT  ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.STAND,     options.SPLIT,     options.SPLIT,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT  ],\n];\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n*/\nexport const basicStrategyAces = [ \n    [   options.HIT,    options.HIT,    options.HIT,    options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.STAND,     options.STAND,     options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.DOUBLE,    options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n]","export default __webpack_public_path__ + \"static/media/felt.5b148bae.png\";","import { useState, useEffect } from \"react\"\n\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\n\nimport Card from \"@heruka_urgyen/react-playing-cards\"\n/*\n  <Card card={card} deckType={deckType} height=\"XXpx\" back />\n\n  where\n  // card rank and suit, e.g 2c, Kh, Ad, etc\n    card :: String\n    card = rank + suit\n      where\n        rank = (2 | 3 ... 9 | T | J | Q | K | A)\n        suit = (c | d | h | s)\n\n  // various card styles\n    deckType :: String\n    deckType = (basic | four-color | big-face | big-face four-color)\n\n  // card height in px\n    height :: String\n\n  // show front (true by default, can be omitted)\n    front :: Boolean\n\n  // show back\n    back :: Boolean\n*/\n\nimport Menu from 'components/Menu'\nimport options from 'utils/enums'\nimport {generateHand, generateRandomDraw, convertFaceToTen} from 'utils'\nimport { basicStrategyValues, basicStrategyPairs, basicStrategyAces } from 'utils/basicStrategy'\n\nimport backgroundImg from 'img/felt.png'\n\nexport default function App() {\n  const [ hands, setHands ] = useState('rand')\n  const [ feedback, setFeedback ] = useState(null)\n  const [ blackjack, setBlackjack ] = useState(false)\n  const [ gameOver, setGameOver ] = useState(false)\n  const [ playerHand, setPlayerHand ] = useState(generateHand(hands))\n  const [ dealerHand, setDealerHand ] = useState(generateRandomDraw())\n\n  useEffect(() => {\n    if (playerHand.cardOne.value === 11) {\n      if ([10,'J','Q','K'].includes(playerHand.cardTwo.value)) {\n        setGameOver(true)\n        setBlackjack(true)\n      }\n    } else if (playerHand.cardTwo.value === 11) {\n      if ([10,'J','Q','K'].includes(playerHand.cardOne.value)) {\n        setGameOver(true)\n        setBlackjack(true)\n      }\n    }\n  }, [playerHand, setBlackjack, setGameOver])\n\n  const newGame = () => {\n    setGameOver(false)\n    setFeedback(null)\n    setBlackjack(false)\n    setPlayerHand(generateHand(hands))\n    setDealerHand(generateRandomDraw())\n  }\n\n  const handleHandChange = (newHand) => {\n    setGameOver(false)\n    setFeedback(null)\n    setBlackjack(false)\n    setHands(newHand)\n    setPlayerHand(generateHand(newHand))\n    setDealerHand(generateRandomDraw())\n  }\n\n  const calculateBasicStat = (hand, dealer, guess) => {\n    setGameOver(true)\n    let strat\n    if (hand.cardOne.value === hand.cardTwo.value) {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string')\n        dealer.value = 10\n      strat = basicStrategyPairs[hand.cardOne.value - 2][dealer.value - 2]\n    }\n    else if (hand.cardOne.value === 11 || hand.cardTwo.value === 11) {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string')\n        dealer.value = 10\n      strat = basicStrategyAces[hand.cardTwo.value === 11 ? hand.cardOne.value - 2 : hand.cardTwo.value - 2][dealer.value - 2]\n    }\n    else {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string')\n        dealer.value = 10\n      const handValue = hand.cardOne.value + hand.cardTwo.value\n      strat = basicStrategyValues[handValue - 2][dealer.value - 2]\n    }\n    if (strat === guess) {\n      setFeedback('Nice Play')\n    } else {\n      setFeedback(`The book says to ${strat.toUpperCase()}`)\n    }\n  }\n\n  return (\n    <div style={{\n      position: 'fixed',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundColor: '#006636',\n      backgroundImage: `url(${backgroundImg})`,\n    }}>\n      <Menu\n        hands={hands}\n        setHands={handleHandChange} \n      />\n      <Grid  \n        container\n        spacing={2}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ \n          minHeight: '100%',\n          minWidth: '100%',\n          padding: '2rem 0 2rem',\n        }}\n      >\n        <Grid item xs={12} lg={8}>\n          <Stack spacing={2} direction=\"row\">\n            <div style={{ marginTop: `-${(window.screen.availHeight * .3)*(5/7)*.10}px` }}>\n            <Card \n              height={window.screen.availHeight * .25} \n              back\n            />\n            </div>\n            <div style={{ marginLeft: `calc(-${(window.screen.availHeight * .3)*(5/7)}px + ${(window.screen.availHeight * .3)*(5/7)*.30}px` }}>\n              <Card \n                card={dealerHand.card}\n                height={window.screen.availHeight * .25}\n              />\n            </div>\n          </Stack>\n        </Grid>\n        <Grid item xs={12} lg={8}>\n          <Stack spacing={2} direction=\"row\">\n            <Card \n              card={playerHand.cardOne.card}\n              height={window.screen.availHeight * .3}\n            />\n            <Card \n              card={playerHand.cardTwo.card}\n              height={window.screen.availHeight * .3}\n            />\n          </Stack>\n        </Grid>\n        <Grid item xs={12} lg={8}>\n          <Stack spacing={2} direction=\"row\">\n            <Button \n              variant=\"contained\"\n              onClick={() => calculateBasicStat(playerHand, dealerHand, options.HIT)}\n              disabled={gameOver}\n            >\n              Hit\n            </Button>\n            <Button \n              variant=\"contained\"\n              onClick={() => calculateBasicStat(playerHand, dealerHand, options.STAND)}\n              disabled={gameOver}\n            >\n              Stand\n            </Button>\n            <Button \n              variant=\"contained\"\n              onClick={() => calculateBasicStat(playerHand, dealerHand, options.DOUBLE)}\n              disabled={gameOver}\n            >\n              Double\n            </Button>\n            <Button \n              variant=\"contained\"\n              onClick={() => calculateBasicStat(playerHand, dealerHand, options.SPLIT)}\n              disabled={playerHand.cardOne.value !== playerHand.cardTwo.value || gameOver}\n            >\n              Split\n            </Button>\n          </Stack>\n        </Grid>\n        <Grid item xs={12} lg={8}>\n          <Stack spacing={2} direction=\"row\" style={{ visibility: gameOver ? 'visible' : 'hidden' }}>\n            {blackjack ? \n              <Paper>\n                <Alert severity=\"info\" variant=\"outlined\">Blackjack</Alert>\n              </Paper>\n              : feedback === 'Nice Play' ?\n              <Paper>\n                <Alert severity=\"success\" variant=\"outlined\">{feedback}</Alert>\n              </Paper>\n              : \n              <Paper>\n                <Alert severity=\"warning\" variant=\"outlined\">{feedback}</Alert>\n              </Paper>\n            }\n            <Button \n              variant=\"text\"\n              color=\"secondary\"\n              onClick={newGame}\n            >\n              <strong>\n                Play Again\n              </strong>\n            </Button>\n          </Stack>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import createTheme from '@mui/material/styles/createTheme'\n\nexport default createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#cccccc'\n    },\n    secondary: {\n      main: '#000000'\n    }\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'app';\nimport reportWebVitals from 'reportWebVitals';\n\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport { ThemeProvider } from '@mui/material/styles'\n\nimport theme from 'theme'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}