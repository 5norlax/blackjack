{"version":3,"sources":["utils/enums.js","utils/index.js","utils/basicStrategy.js","app/index.js","reportWebVitals.js","index.js"],"names":["Object","freeze","HIT","STAND","DOUBLE","SPLIT","generateHand","deck","cardOne","Math","floor","random","cardTwo","value","card","getCardValue","generateRandomDraw","convertFaceToTen","hand","suit","basicStrategyValues","options","basicStrategyPairs","basicStrategyAces","App","useState","feedback","setFeedback","blackjack","setBlackjack","gameOver","setGameOver","playerHand","setPlayerHand","dealerHand","setDealerHand","useEffect","includes","calculateBasicStat","dealer","guess","strat","handValue","toUpperCase","Grid","container","spacing","direction","alignItems","justify","style","minHeight","item","xs","lg","Stack","height","window","screen","availHeight","back","Button","variant","onClick","disabled","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5577a8a.chunk.js","sourcesContent":["export default Object.freeze({\n    HIT: 'Hit', \n    STAND: 'Stand', \n    DOUBLE: 'Double',\n    SPLIT: 'Split'\n})","export const generateHand = () => {\n    const deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 11]\n    const cardOne = deck[Math.floor(Math.random() * (13))]\n    const cardTwo = deck[Math.floor(Math.random() * (13))]\n    return {\n        cardOne: {\n        value: cardOne,\n        card: getCardValue(cardOne)\n        },\n        cardTwo: {\n        value: cardTwo,\n        card: getCardValue(cardTwo)\n        }\n    }\n}   \n\nexport const generateRandomDraw = () => {\n    const deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 11]\n    const card = deck[Math.floor(Math.random() * (13))]\n    return {\n        value: card,\n        card: getCardValue(card)\n    }\n}\n\nexport const convertFaceToTen = (hand) => {\n    if (typeof hand.cardOne.value === 'string')\n        hand.cardOne.value = 10\n    if (typeof hand.cardTwo.value === 'string')\n        hand.cardTwo.value = 10\n    return hand\n}\n\nconst getRandomSuit = () => {\n    const suits = ['c', 'd', 'h', 's']\n    return suits[Math.floor(Math.random() * (4))]\n}\n\nexport const getCardValue = (value) => {\n    const suit = getRandomSuit()\n    if (value === 10)\n        return `T${suit}`\n    if (value === 11)\n        return `A${suit}`\n    return value + suit\n}","import options from './enums'\n\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n  10\n  11\n  12\n  13\n  14\n  15\n  16\n  17\n  18\n  19\n  20\n*/\nexport const basicStrategyValues = [ \n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.HIT,       options.HIT    ],\n    [   options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE ],\n    [   options.HIT,    options.HIT,    options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n];\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n  10\n  11\n*/\nexport const basicStrategyPairs = [ \n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.SPLIT,  options.SPLIT,     options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.DOUBLE,    options.HIT,       options.HIT    ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT  ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.STAND,     options.SPLIT,     options.SPLIT,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,  options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT,     options.SPLIT  ],\n];\n/*\n    2  3  4  5  6  7  8  9  10  11\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n*/\nexport const basicStrategyAces = [ \n    [   options.HIT,    options.HIT,    options.HIT,    options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.HIT,    options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.HIT,    options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n    [   options.STAND,  options.DOUBLE, options.DOUBLE, options.DOUBLE, options.DOUBLE,    options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.DOUBLE,    options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.STAND,  options.STAND,  options.STAND,  options.STAND,  options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND,     options.STAND  ],\n    [   options.HIT,    options.HIT,    options.HIT,    options.HIT,    options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT,       options.HIT    ],\n]","import { useState, useEffect } from \"react\"\n\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\n\nimport Card from \"@heruka_urgyen/react-playing-cards\"\n/*\n  <Card card={card} deckType={deckType} height=\"XXpx\" back />\n\n  where\n  // card rank and suit, e.g 2c, Kh, Ad, etc\n    card :: String\n    card = rank + suit\n      where\n        rank = (2 | 3 ... 9 | T | J | Q | K | A)\n        suit = (c | d | h | s)\n\n  // various card styles\n    deckType :: String\n    deckType = (basic | four-color | big-face | big-face four-color)\n\n  // card height in px\n    height :: String\n\n  // show front (true by default, can be omitted)\n    front :: Boolean\n\n  // show back\n    back :: Boolean\n*/\n\nimport options from '../utils/enums'\nimport {generateHand, generateRandomDraw, convertFaceToTen} from '../utils'\nimport { basicStrategyValues, basicStrategyPairs, basicStrategyAces } from '../utils/basicStrategy'\n\nexport default function App() {\n  const [ feedback, setFeedback ] = useState(null)\n  const [ blackjack, setBlackjack ] = useState(false)\n  const [ gameOver, setGameOver ] = useState(false)\n  const [ playerHand, setPlayerHand ] = useState(generateHand())\n  const [ dealerHand, setDealerHand ] = useState(generateRandomDraw())\n\n  useEffect(() => {\n    if (playerHand.cardOne.value === 11) {\n      if ([10,'J','Q','K'].includes(playerHand.cardTwo.value)) {\n        setGameOver(true)\n        setBlackjack(true)\n      }\n    } else if (playerHand.cardTwo.value === 11) {\n      if ([10,'J','Q','K'].includes(playerHand.cardOne.value)) {\n        setGameOver(true)\n        setBlackjack(true)\n      }\n    }\n  }, [playerHand, setBlackjack, setGameOver])\n\n  const newGame = () => {\n    setGameOver(false)\n    setFeedback(null)\n    setBlackjack(false)\n    setPlayerHand(generateHand())\n    setDealerHand(generateRandomDraw())\n  }\n\n  const calculateBasicStat = (hand, dealer, guess) => {\n    setGameOver(true)\n    let strat\n    if (hand.cardOne.value === hand.cardTwo.value) {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string')\n        dealer.value = 10\n      strat = basicStrategyPairs[hand.cardOne.value - 2][dealer.value - 2]\n    }\n    else if (hand.cardOne.value === 11 || hand.cardTwo.value === 11) {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string')\n        dealer.value = 10\n      strat = basicStrategyAces[hand.cardTwo.value === 11 ? hand.cardOne.value - 2 : hand.cardTwo.value - 2][dealer.value - 2]\n    }\n    else {\n      hand = convertFaceToTen(hand)\n      if (typeof dealer.value === 'string')\n        dealer.value = 10\n      const handValue = hand.cardOne.value + hand.cardTwo.value\n      strat = basicStrategyValues[handValue - 2][dealer.value - 2]\n    }\n    if (strat === guess) {\n      setFeedback('Nice Play')\n    } else {\n      setFeedback(`The book says to ${strat.toUpperCase()}`)\n    }\n  }\n\n  return (\n    <Grid  \n      container\n      spacing={2}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: '100vh' }}\n    >\n      <Grid item xs={12} lg={8}>\n        <Stack spacing={2} direction=\"row\">\n          <Card \n            height={window.screen.availHeight * .25} \n            back\n          />\n          <Card \n            card={dealerHand.card}\n            height={window.screen.availHeight * .25}\n          />\n        </Stack>\n      </Grid>\n      <Grid item xs={12} lg={8}>\n        <Stack spacing={2} direction=\"row\">\n          <Card \n            card={playerHand.cardOne.card}\n            height={window.screen.availHeight * .3}\n          />\n          <Card \n            card={playerHand.cardTwo.card}\n            height={window.screen.availHeight * .3}\n          />\n        </Stack>\n      </Grid>\n      <Grid item xs={12} lg={8}>\n        <Stack spacing={2} direction=\"row\">\n          <Button \n            variant=\"outlined\"\n            onClick={() => calculateBasicStat(playerHand, dealerHand, options.HIT)}\n            disabled={gameOver}\n          >\n            Hit\n          </Button>\n          <Button \n            variant=\"outlined\"\n            onClick={() => calculateBasicStat(playerHand, dealerHand, options.STAND)}\n            disabled={gameOver}\n          >\n            Stand\n          </Button>\n          <Button \n            variant=\"outlined\"\n            onClick={() => calculateBasicStat(playerHand, dealerHand, options.DOUBLE)}\n            disabled={gameOver}\n          >\n            Double\n          </Button>\n          <Button \n            variant=\"outlined\"\n            onClick={() => calculateBasicStat(playerHand, dealerHand, options.SPLIT)}\n            disabled={playerHand.cardOne.value !== playerHand.cardTwo.value || gameOver}\n          >\n            Split\n          </Button>\n        </Stack>\n      </Grid>\n      {gameOver &&\n      <Grid item xs={12} lg={8}>\n        <Stack spacing={2} direction=\"row\">\n          {blackjack ? \n            <Alert severity=\"info\">Blackjack</Alert>\n            : feedback === 'Nice Play' ?\n            <Alert severity=\"success\">{feedback}</Alert>\n            : \n            <Alert severity=\"warning\">{feedback}</Alert>\n          }\n          <Button \n            variant=\"text\"\n            onClick={newGame}\n          >\n            Play Again\n          </Button>\n        </Stack>\n      </Grid>\n      }\n    </Grid>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}